## PSNR VALUES ##
# Read values
gen_loss2 = read.csv("model2/psnr.csv", header = FALSE)
## PSNR VALUES ##
# Read values
psnr2 = read.csv("model2/psnr.csv", header = FALSE)
names(psnr2)
names(psnr2) = c('epoch')
names(psnr3)
names(psnr2)
psnr2
psnr2$null
psnr2$NA
psnr[1,]
psnr2[1,]
psnr2[,1]
psnr2[,2]
psnr2[,2:3]
psnr2[,2:4]
psnr2[,21]
psnr2[,22]
total[1] = psnr2[,]
total[1] = psnr2[,1]
total = c()
total
total[1] = psnr2[,1]
total
total[1] = mean(psnr2[,])
total[1] = mean(psnr2[,1])
total
total[1] = mean(psnr2[,2])
psnr2[,21]
psnr2[1,]
psnr2[1,1:21]
psnr2[1,2:21]
total = mean(psnr2[1,2:21])
psnr2[,2:21]
apply(psnr2[,2:21], mean)
apply(psnr2[,2:21], 2, mean)
apply(psnr2[,2:21], 1, mean)
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
psnr2$average
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
psnr5$average
psnr2$average
psnr3$average
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
psnr2$average
psnr3$average
psnr5$average
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
psnr5
psnr2
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
# Make plot
ggplot(psnr2 , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Generator loss after each epoch",
x ="Epochs trained", y = "Loss value", color='Amount of \nresidual blocks')
# Make plot
ggplot(total_psnr , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Generator loss after each epoch",
x ="Epochs trained", y = "Loss value", color='Amount of \nresidual blocks')
# Make plot
ggplot(total_psnr , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Average PSNR after each epoch",
x ="Epochs trained", y = "Loss value", color='Amount of \nresidual blocks')
source('~/Documents/university/machine_learning/BeautyFlower/statistics/statistics.R')
## SSIM VALUES ##
# Read values
ssim2 = read.csv("model2/ssim.csv", header = FALSE)
ssim2$epoch = ssim2$V1
ssim2$average = apply(ssim2[,2:21], 1, mean)
ssim2$blocks = "4"
ssim3 = read.csv("model3/ssim.csv", header = FALSE)
ssim3$epoch = ssim3$V1
ssim3$average = apply(ssim3[,2:21], 1, mean)
ssim3$blocks = "8"
ssim4 = read.csv("model4/ssim.csv", header = FALSE)
ssim4$epoch = ssim4$V1
ssim4$average = apply(ssim4[,2:21], 1, mean)
ssim4$blocks = "12"
ssim5 = read.csv("model5/ssim.csv", header = FALSE)
ssim5$epoch = ssim5$V1
ssim5$average = apply(ssim5[,2:21], 1, mean)
ssim5$blocks = "16"
# Stack data
total_ssim = rbind(ssim2, ssim3, ssim4, ssim5)
total_ssim$blocks = as.factor(total_ssim$blocks)
# Make plot
ggplot(total_ssim , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Average SSIM after each epoch",
x ="Epochs trained", y = "Loss value", color='Amount of \nresidual blocks')
# Make plot
ggplot(total_psnr , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Average PSNR after each epoch",
x ="Epochs trained", y = "PSNR value", color='Amount of \nresidual blocks')
total_ssim$blocks = as.factor(total_ssim$blocks)
# Make plot
ggplot(total_ssim , aes(epoch, average , colour=blocks , group=blocks)) + geom_line() +
labs(title="Average SSIM after each epoch",
x ="Epochs trained", y = "SSIM value", color='Amount of \nresidual blocks')
psnr2
ssim4[,1]
ssim4[,2]
